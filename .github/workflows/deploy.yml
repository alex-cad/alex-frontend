name: Deploy NextJs

on:
    pull_request:
        branches:
            - dev

env:
  HOST: 120.24.161.118
  USERNAME: ecs-user
  IMAGE_NAME: nextjs-dev-frontend
  CONTAINER_NAME: dev-frontend

jobs:
    # Build docker image and deploy to remote server
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Detect package manager
          id: detect-package-manager
          run: |
            if [ -f "${{ github.workspace }}/yarn.lock" ]; then
                echo "manager=yarn" >> $GITHUB_OUTPUT
                echo "command=install" >> $GITHUB_OUTPUT
                echo "runner=yarn" >> $GITHUB_OUTPUT
                exit 0
            elif [ -f "${{ github.workspace }}/package.json" ]; then
                echo "manager=npm" >> $GITHUB_OUTPUT
                echo "command=ci" >> $GITHUB_OUTPUT
                echo "runner=npx --no-install" >> $GITHUB_OUTPUT
                exit 0
            else
                echo "Unable to determine package manager" >&2
                exit 1
            fi
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: "20"
            cache: ${{ steps.detect-package-manager.outputs.manager }}

        - name: Docker build
          run: docker build -f ./Dockerfile -t ${{ env.IMAGE_NAME }} .

        - name: Docker save
          run: docker save -o ${{ env.IMAGE_NAME }}.tar ${{ env.IMAGE_NAME }}:latest
        
        - name: Transfer to remote server
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.ALIYUN_ECS_SSH_SECRET }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            scp -o StrictHostKeyChecking=no ./${{ env.IMAGE_NAME }}.tar ${{ env.USERNAME }}@${{ env.HOST }}:~/${{ env.IMAGE_NAME }}.tar

        - name: Restart nextjs service
          uses: appleboy/ssh-action@master
          with:
            host: ${{ env.HOST }}
            username: ${{ env.USERNAME }}
            key: ${{ secrets.ALIYUN_ECS_SSH_SECRET }}
            port: 22
            script: |
              docker load -i ~/${{ env.IMAGE_NAME }}.tar
              docker stop frontend
              docker rm frontend
              docker run -d --name ${{ env.CONTAINER_NAME }} -p 3000:3000 ${{ env.IMAGE_NAME }}:latest

          

        

        